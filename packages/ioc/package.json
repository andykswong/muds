{
  "name": "@muds/ioc",
  "version": "0.1.2",
  "description": "Minimal inversion of control container for muds",
  "type": "module",
  "sideEffects": false,
  "main": "index.js",
  "types": "index.d.ts",
  "exports": {
    "import": "./index.js"
  },
  "files": [
    "/dist",
    "index.js",
    "index.d.ts"
  ],
  "scripts": {
    "prepublishOnly": "npm run clean && npm run build && npm test",
    "clean": "rimraf coverage docs dist",
    "prebuild": "npm run lint",
    "build": "npm run tsc && npm run babel",
    "lint": "eslint src --ext .ts,.tsx",
    "babel": "babel dist -d dist",
    "tsc": "tsc --project tsconfig.build.json",
    "test": "npm run jest",
    "jest": "cross-env NODE_OPTIONS=--experimental-vm-modules npx jest",
    "jest:watch": "npm run jest -- --watch",
    "doc": "typedoc --out docs src/index.ts"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andykswong/muds.git"
  },
  "keywords": [
    "data-oriented",
    "microframework",
    "muds",
    "typescript",
    "di",
    "ioc",
    "dependency injection",
    "inversion of control"
  ],
  "author": "Andy K.S. Wong <andykswong@outlook.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/andykswong/muds/issues"
  },
  "homepage": "https://github.com/andykswong/muds",
  "devDependencies": {
    "@babel/cli": "^7.18",
    "@babel/core": "^7.18",
    "@babel/preset-env": "^7.18",
    "@types/jest": "^29.2",
    "@types/node": "^18.0",
    "@typescript-eslint/eslint-plugin": "^5.30",
    "@typescript-eslint/parser": "^5.30",
    "babel-plugin-add-import-extension": "^1.6",
    "copyfiles": "^2.4",
    "cross-env": "^7.0",
    "eslint": "^8.19",
    "jest": "^29.2",
    "reflect-metadata": "^0.1",
    "rimraf": "^3.0",
    "ts-jest": "^29.0",
    "typedoc": "^0.23",
    "typescript": "^4.7"
  },
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/jest.setup.ts"
    ],
    "testEnvironment": "node",
    "testMatch": [
      "**/__tests__/**/*.spec.ts"
    ],
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!**/__tests__/**"
    ],
    "coverageDirectory": "coverage"
  },
  "typedoc": {
    "entryPoint": "src/index.ts"
  }
}
